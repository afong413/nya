/*! From @stdlib/math/base/special/erfinv */

float _erfinvR1(float x) {
  float ax;
  float s1;
  float s2;
  if (x == 0.0) {
    return -0.0005087819496582806;
  }
  if (x < 0.0) {
    ax = -x;
  } else {
    ax = x;
  }
  if (ax <= 1.0) {
    s1 =
      -0.0005087819496582806 +
      x *
        (-0.008368748197417368 +
          x *
            (0.03348066254097446 +
              x *
                (-0.012692614766297404 +
                  x *
                    (-0.03656379714117627 +
                      x *
                        (0.02198786811111689 +
                          x *
                            (0.008226878746769157 +
                              x *
                                (-0.005387729650712429 +
                                  x * (0.0 + x * 0.0))))))));
    s2 =
      1.0 +
      x *
        (-0.9700050433032906 +
          x *
            (-1.5657455823417585 +
              x *
                (1.5622155839842302 +
                  x *
                    (0.662328840472003 +
                      x *
                        (-0.7122890234154284 +
                          x *
                            (-0.05273963823400997 +
                              x *
                                (0.07952836873415717 +
                                  x *
                                    (-0.0023339375937419 +
                                      x * 0.0008862163904564247))))))));
  } else {
    x = 1.0 / x;
    s1 =
      0.0 +
      x *
        (0.0 +
          x *
            (-0.005387729650712429 +
              x *
                (0.008226878746769157 +
                  x *
                    (0.02198786811111689 +
                      x *
                        (-0.03656379714117627 +
                          x *
                            (-0.012692614766297404 +
                              x *
                                (0.03348066254097446 +
                                  x *
                                    (-0.008368748197417368 +
                                      x * -0.0005087819496582806))))))));
    s2 =
      0.0008862163904564247 +
      x *
        (-0.0023339375937419 +
          x *
            (0.07952836873415717 +
              x *
                (-0.05273963823400997 +
                  x *
                    (-0.7122890234154284 +
                      x *
                        (0.662328840472003 +
                          x *
                            (1.5622155839842302 +
                              x *
                                (-1.5657455823417585 +
                                  x * (-0.9700050433032906 + x * 1.0))))))));
  }
  return s1 / s2;
}

float _erfinvR2(float x) {
  float ax;
  float s1;
  float s2;
  if (x == 0.0) {
    return -0.20243350835593876;
  }
  if (x < 0.0) {
    ax = -x;
  } else {
    ax = x;
  }
  if (ax <= 1.0) {
    s1 =
      -0.20243350835593876 +
      x *
        (0.10526468069939171 +
          x *
            (8.3705032834312 +
              x *
                (17.644729840837403 +
                  x *
                    (-18.851064805871424 +
                      x *
                        (-44.6382324441787 +
                          x *
                            (17.445385985570866 +
                              x *
                                (21.12946554483405 +
                                  x * -3.6719225470772936)))))));
    s2 =
      1.0 +
      x *
        (6.242641248542475 +
          x *
            (3.971343795334387 +
              x *
                (-28.66081804998 +
                  x *
                    (-20.14326346804852 +
                      x *
                        (48.560921310873994 +
                          x *
                            (10.826866735546016 +
                              x *
                                (-22.643693341313973 +
                                  x * 1.7211476576120028)))))));
  } else {
    x = 1.0 / x;
    s1 =
      -3.6719225470772936 +
      x *
        (21.12946554483405 +
          x *
            (17.445385985570866 +
              x *
                (-44.6382324441787 +
                  x *
                    (-18.851064805871424 +
                      x *
                        (17.644729840837403 +
                          x *
                            (8.3705032834312 +
                              x *
                                (0.10526468069939171 +
                                  x * -0.20243350835593876)))))));
    s2 =
      1.7211476576120028 +
      x *
        (-22.643693341313973 +
          x *
            (10.826866735546016 +
              x *
                (48.560921310873994 +
                  x *
                    (-20.14326346804852 +
                      x *
                        (-28.66081804998 +
                          x *
                            (3.971343795334387 +
                              x * (6.242641248542475 + x * 1.0)))))));
  }
  return s1 / s2;
}

float _erfinvR3(float x) {
  float ax;
  float s1;
  float s2;
  if (x == 0.0) {
    return -0.1311027816799519;
  }
  if (x < 0.0) {
    ax = -x;
  } else {
    ax = x;
  }
  if (ax <= 1.0) {
    s1 =
      -0.1311027816799519 +
      x *
        (-0.16379404719331705 +
          x *
            (0.11703015634199525 +
              x *
                (0.38707973897260434 +
                  x *
                    (0.3377855389120359 +
                      x *
                        (0.14286953440815717 +
                          x *
                            (0.029015791000532906 +
                              x *
                                (0.0021455899538880526 +
                                  x *
                                    (-6.794655751811263e-7 +
                                      x *
                                        (2.8522533178221704e-8 +
                                          x * -6.81149956853777e-10)))))))));
    s2 =
      1.0 +
      x *
        (3.4662540724256723 +
          x *
            (5.381683457070069 +
              x *
                (4.778465929458438 +
                  x *
                    (2.5930192162362027 +
                      x *
                        (0.848854343457902 +
                          x *
                            (0.15226433829533179 +
                              x *
                                (0.011059242293464892 +
                                  x * (0.0 + x * (0.0 + x * 0.0)))))))));
  } else {
    x = 1.0 / x;
    s1 =
      -6.81149956853777e-10 +
      x *
        (2.8522533178221704e-8 +
          x *
            (-6.794655751811263e-7 +
              x *
                (0.0021455899538880526 +
                  x *
                    (0.029015791000532906 +
                      x *
                        (0.14286953440815717 +
                          x *
                            (0.3377855389120359 +
                              x *
                                (0.38707973897260434 +
                                  x *
                                    (0.11703015634199525 +
                                      x *
                                        (-0.16379404719331705 +
                                          x * -0.1311027816799519)))))))));
    s2 =
      0.0 +
      x *
        (0.0 +
          x *
            (0.0 +
              x *
                (0.011059242293464892 +
                  x *
                    (0.15226433829533179 +
                      x *
                        (0.848854343457902 +
                          x *
                            (2.5930192162362027 +
                              x *
                                (4.778465929458438 +
                                  x *
                                    (5.381683457070069 +
                                      x *
                                        (3.4662540724256723 + x * 1.0)))))))));
  }
  return s1 / s2;
}

float _erfinvR4(float x) {
  float ax;
  float s1;
  float s2;
  if (x == 0.0) {
    return -0.0350353787183178;
  }
  if (x < 0.0) {
    ax = -x;
  } else {
    ax = x;
  }
  if (ax <= 1.0) {
    s1 =
      -0.0350353787183178 +
      x *
        (-0.0022242652921344794 +
          x *
            (0.018557330651423107 +
              x *
                (0.009508047013259196 +
                  x *
                    (0.0018712349281955923 +
                      x *
                        (0.00015754461742496055 +
                          x *
                            (0.00000460469890584318 +
                              x *
                                (-2.304047769118826e-10 +
                                  x * 2.6633922742578204e-12)))))));
    s2 =
      1.0 +
      x *
        (1.3653349817554064 +
          x *
            (0.7620591645536234 +
              x *
                (0.22009110576413124 +
                  x *
                    (0.03415891436709477 +
                      x *
                        (0.00263861676657016 +
                          x *
                            (0.00007646752923027944 + x * (0.0 + x * 0.0)))))));
  } else {
    x = 1.0 / x;
    s1 =
      2.6633922742578204e-12 +
      x *
        (-2.304047769118826e-10 +
          x *
            (0.00000460469890584318 +
              x *
                (0.00015754461742496055 +
                  x *
                    (0.0018712349281955923 +
                      x *
                        (0.009508047013259196 +
                          x *
                            (0.018557330651423107 +
                              x *
                                (-0.0022242652921344794 +
                                  x * -0.0350353787183178)))))));
    s2 =
      0.0 +
      x *
        (0.0 +
          x *
            (0.00007646752923027944 +
              x *
                (0.00263861676657016 +
                  x *
                    (0.03415891436709477 +
                      x *
                        (0.22009110576413124 +
                          x *
                            (0.7620591645536234 +
                              x * (1.3653349817554064 + x * 1.0)))))));
  }
  return s1 / s2;
}

float _erfinvR5(float x) {
  float ax;
  float s1;
  float s2;
  if (x == 0.0) {
    return -0.016743100507663373;
  }
  if (x < 0.0) {
    ax = -x;
  } else {
    ax = x;
  }
  if (ax <= 1.0) {
    s1 =
      -0.016743100507663373 +
      x *
        (-0.0011295143874558028 +
          x *
            (0.001056288621524929 +
              x *
                (0.00020938631748758808 +
                  x *
                    (0.000014962478375834237 +
                      x *
                        (4.4969678992770644e-7 +
                          x *
                            (4.625961635228786e-9 +
                              x *
                                (-2.811287356288318e-14 +
                                  x * 9.905570997331033e-17)))))));
    s2 =
      1.0 +
      x *
        (0.5914293448864175 +
          x *
            (0.1381518657490833 +
              x *
                (0.016074608709367652 +
                  x *
                    (0.0009640118070051656 +
                      x *
                        (0.000027533547476472603 +
                          x * (2.82243172016108e-7 + x * (0.0 + x * 0.0)))))));
  } else {
    x = 1.0 / x;
    s1 =
      9.905570997331033e-17 +
      x *
        (-2.811287356288318e-14 +
          x *
            (4.625961635228786e-9 +
              x *
                (4.4969678992770644e-7 +
                  x *
                    (0.000014962478375834237 +
                      x *
                        (0.00020938631748758808 +
                          x *
                            (0.001056288621524929 +
                              x *
                                (-0.0011295143874558028 +
                                  x * -0.016743100507663373)))))));
    s2 =
      0.0 +
      x *
        (0.0 +
          x *
            (2.82243172016108e-7 +
              x *
                (0.000027533547476472603 +
                  x *
                    (0.0009640118070051656 +
                      x *
                        (0.016074608709367652 +
                          x *
                            (0.1381518657490833 +
                              x * (0.5914293448864175 + x * 1.0)))))));
  }
  return s1 / s2;
}

const float _erfinvY1 = 8.91314744949340820313e-2;
const float _erfinvY2 = 2.249481201171875;
const float _erfinvY3 = 8.07220458984375e-1;
const float _erfinvY4 = 9.3995571136474609375e-1;
const float _erfinvY5 = 9.8362827301025390625e-1;

float _nya_helper_erfinv(float x) {
  float sign;
  float ax;
  float qs;
  float q;
  float g;
  float r;

  // Special case: NaN
  if (isnan(x)) {
    return 0.0 / 0.0;
  }
  // Special case: 1
  if (x == 1.0) {
    return 1.0 / 0.0;
  }
  // Special case: -1
  if (x == -1.0) {
    return -1.0 / 0.0;
  }
  // Special case: +-0
  if (x == 0.0) {
    return x;
  }
  // Special case: |x| > 1 (range error)
  if (x > 1.0 || x < -1.0) {
    return 0.0 / 0.0;
  }
  // Argument reduction (reduce to interval [0,1]). If `x` is negative, we can safely negate the value, taking advantage of the error function being an odd function; i.e., `erf(-x) = -erf(x)`.
  if (x < 0.0) {
    sign = -1.0;
    ax = -x;
  } else {
    sign = 1.0;
    ax = x;
  }
  q = 1.0 - ax;

  // |x| <= 0.5
  if (ax <= 0.5) {
    g = ax * (ax + 10.0);
    r = _erfinvR1(ax);
    return sign * (g * _erfinvY1 + g * r);
  }
  // 1-|x| >= 0.25
  if (q >= 0.25) {
    g = sqrt(-2.0 * log(q));
    q -= 0.25;
    r = _erfinvR2(q);
    return sign * (g / (_erfinvY2 + r));
  }
  q = sqrt(-log(q));

  // q < 3
  if (q < 3.0) {
    qs = q - 1.125;
    r = _erfinvR3(qs);
    return sign * (_erfinvY3 * q + r * q);
  }
  // q < 6
  if (q < 6.0) {
    qs = q - 3.0;
    r = _erfinvR4(qs);
    return sign * (_erfinvY4 * q + r * q);
  }
  // q < 18
  qs = q - 6.0;
  r = _erfinvR5(qs);
  return sign * (_erfinvY5 * q + r * q);
}
