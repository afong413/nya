{"packages":[["core/cmp","comparison operators","oklab(0.8888888888888888 -0.006484158173042238 0.03568034297613008)","oklab(0.42857142857142855 -0.025010324381734336 0.13762418005078741)","oklab(0.2 -0.011671484711476023 0.06422461735703414)",null],["bool","boolean operations","oklab(0.8888888888888888 -0.03523795910218803 0.008568396607290652)","oklab(0.42857142857142855 -0.1359178422512966 0.03304952977097821)","oklab(0.2 -0.06342832638393843 0.015423113893123168)","basic support for boolean values"],["num/real","real numbers","oklab(0.8888888888888888 -0.010446453138995126 -0.03472755100668754)","oklab(0.42857142857142855 -0.04029346210755261 -0.13394912531150902)","oklab(0.2 -0.01880361565019122 -0.06250959181203755)","support for real numbers"],["color/core","color functions core","oklab(0.8888888888888888 0.031027875511145626 -0.018772376604259657)","oklab(0.42857142857142855 0.11967894840013309 -0.07240773833071579)","oklab(0.2 0.05585017592006211 -0.03379027788766737)","rgb and hsv functions"],["core/ops","basic operators","oklab(0.8888888888888888 0.020570599935878692 -0.029866061012214742)","oklab(0.42857142857142855 0.07934374260981777 -0.11519766390425681)","oklab(0.2 0.037027079884581635 -0.053758909821986514)",null],["geo/point","geometric points","oklab(0.8888888888888888 -0.03458574628904044 -0.0109067564260614)","oklab(0.42857142857142855 -0.13340216425772736 -0.042068917643379666)","oklab(0.2 -0.06225434332027277 -0.019632161566910514)","geometric points in 2D"],["num/complex","complex numbers","oklab(0.8888888888888888 -0.024754542973667696 -0.02650176945549382)","oklab(0.42857142857142855 -0.09548180861271821 -0.1022211107569047)","oklab(0.2 -0.044558177352601834 -0.047703185019888864)","basic support for complex numbers"],["factorial","factorial","oklab(0.8888888888888888 -0.029756783989182314 -0.020728361940308963)","oklab(0.42857142857142855 -0.11477616681541744 -0.07995225319833453)","oklab(0.2 -0.053562211180528146 -0.03731105149255612)","extended factorial operator"],["special/erf","error function","oklab(0.8888888888888888 0.03568130779685265 -0.006478846812015879)","oklab(0.42857142857142855 0.13762790150214588 -0.02498983770348981)","oklab(0.2 0.06422635403433474 -0.011661924261628579)","on the real numbers"],["data/statistics","statistics","oklab(0.8888888888888888 -0.027654276993259206 0.023460011638688515)","oklab(0.42857142857142855 -0.10666649697399976 0.09048861632065566)","oklab(0.2 -0.049777698587866556 0.04222802094963931)","rudimentary statistics functions"],["geo/dcg","geometry","oklab(0.8888888888888888 0.0028402359298389237 0.03615334344110041)","oklab(0.42857142857142855 0.010955195729378702 0.13944861041567294)","oklab(0.2 0.005112424673710062 0.06507601819398072)","geometric objects and constructions"],["number-theory","number theory","oklab(0.8888888888888888 0.0326331582335967 -0.01581796971195564)","oklab(0.42857142857142855 0.12587075318673005 -0.06101216888897173)","oklab(0.2 0.058739684820474036 -0.028472345481520143)","functions for working with integers"],["special/erf-complex","complex error function","oklab(0.8888888888888888 -0.0021808713547524098 0.03619910195351988)","oklab(0.42857142857142855 -0.00841193236833072 0.13962510753500518)","oklab(0.2 -0.003925568438554337 0.06515838351633575)",null],["sym/core","symbolics core","oklab(0.8888888888888888 0.02450004749239584 -0.026737218534800027)","oklab(0.42857142857142855 0.09450018318495534 -0.1031292714913715)","oklab(0.2 0.044100085486312494 -0.048126993362640036)",null],["trig/real","trigonometry","oklab(0.8888888888888888 -0.024058717087575104 0.02713502007014787)","oklab(0.42857142857142855 -0.09279790876636108 0.10466364884199889)","oklab(0.2 -0.04330569075763518 0.04884303612626615)","trig on real numbers"],["with","with","oklab(0.8888888888888888 -0.03289897490640148 -0.015257412369575382)","oklab(0.42857142857142855 -0.1268960460675485 -0.05885001913979074)","oklab(0.2 -0.059218154831522644 -0.02746334226523568)","substitute variables using 'with'"],["3d/point","3D points","oklab(0.8888888888888888 0.0004517403681317501 -0.036261923732023735)","oklab(0.42857142857142855 0.0017424271342224638 -0.13986742010923434)","oklab(0.2 0.00081313266263715 -0.0652714627176427)","enables cross-products and basic arithmetic on three-dimensional points"],["color/extras","color functions extended","oklab(0.8888888888888888 0.021947123108606057 0.02886962018044221)","oklab(0.42857142857142855 0.08465318913319475 0.1113542492674199)","oklab(0.2 0.03950482159549089 0.05196531632479596)","more functions for creating colors"],["core/fn","functions","oklab(0.8888888888888888 0.03624530353339978 -0.0011870778740348874)","oklab(0.42857142857142855 0.13980331362882767 -0.004578728942705992)","oklab(0.2 0.06524154636011958 -0.0021367401732627967)","call functions and access properties"],["data/distributions","statistical distributions","oklab(0.8888888888888888 -0.017829258399088454 0.03157924519436523)","oklab(0.42857142857142855 -0.0687699966821983 0.1218056600354087)","oklab(0.2 -0.03209266511835921 0.0568426413498574)",null],["data/list","core list functionality","oklab(0.8888888888888888 -0.014703930213543243 -0.03315004703439433)","oklab(0.42857142857142855 -0.05671515939509534 -0.12786446713266378)","oklab(0.2 -0.02646707438437783 -0.05967008466190977)",null],["data/list-extras","extra list functions","oklab(0.8888888888888888 -0.018164697728310076 0.03138749653200192)","oklab(0.42857142857142855 -0.07006383409491025 0.12106605805200736)","oklab(0.2 -0.03269645591095813 0.05649749375760344)",null],["data/statistics-complex","complex statistics","oklab(0.8888888888888888 -0.011682162656920757 0.03433159270649342)","oklab(0.42857142857142855 -0.045059770248122896 0.13242185758218883)","oklab(0.2 -0.021027892782457355 0.06179686687168814)","rudimentary statistics for complex numbers"],["eval","evaluator","oklab(0.8888888888888888 0.03392093298815266 -0.012825813320041849)","oklab(0.42857142857142855 0.13083788438287447 -0.04947099423444711)","oklab(0.2 0.06105767937867476 -0.02308646397607532)","displays computed expressions"],["gridlines","gridlines","oklab(0.8888888888888888 -0.02273595548150674 -0.02825256644006434)","oklab(0.42857142857142855 -0.08769582828581167 -0.10897418484024811)","oklab(0.2 -0.04092471986671212 -0.05085461959211579)","draws a numbered grid below the graphs"],["item/docs-fn","inline function docs","oklab(0.8888888888888888 -0.014984452805288463 -0.033024193498606275)","oklab(0.42857142857142855 -0.05779717510611262 -0.1273790320660527)","oklab(0.2 -0.026972015049519227 -0.059443548297491274)",null],["item/folder","folders","oklab(0.8888888888888888 -0.022646978290961208 -0.02832393963409818)","oklab(0.42857142857142855 -0.08735263055085032 -0.10924948144580722)","oklab(0.2 -0.04076456092373016 -0.05098309134137671)","for organizing expressions"],["item/note","notes","oklab(0.8888888888888888 -0.029444895674881316 0.021169064712515326)","oklab(0.42857142857142855 -0.11357316903168503 0.08165210674827336)","oklab(0.2 -0.05300081221478635 0.03810431648252757)","in plain text between expressions"],["iterate","iterate","oklab(0.8888888888888888 0.004696377899069182 0.035959355065635426)","oklab(0.42857142857142855 0.018114600467838263 0.13870036953887946)","oklab(0.2 0.008453480218324524 0.06472683911814375)","easily repeat expressions"],["number-theory-complex","complex number theory","oklab(0.8888888888888888 0.01801854350553287 0.03147162646013906)","oklab(0.42857142857142855 0.0695000963784839 0.12139055920339346)","oklab(0.2 0.032433378309959154 0.056648927628250294)","for complex numbers with integer components"],["shader","shaders","oklab(0.8888888888888888 -0.002711959781662066 -0.036163192008587315)","oklab(0.42857142857142855 -0.010460416300696536 -0.13948659774740815)","oklab(0.2 -0.004881527606991717 -0.06509374561545715)","creates shaders with the x, y, and p variables"],["slider","sliders","oklab(0.8888888888888888 -0.0175767782548081 -0.031720467340324784)","oklab(0.42857142857142855 -0.06779614469711692 -0.12235037402696697)","oklab(0.2 -0.03163820085865457 -0.05709684121258459)","sliders on numeric variables"],["sym/deriv","derivatives","oklab(0.8888888888888888 -0.033785143364108844 -0.013179350134734185)","oklab(0.42857142857142855 -0.13031412440441978 -0.05083463623397469)","oklab(0.2 -0.060813258055395905 -0.023722830242521524)","via leibniz notation"],["trig/complex","complex trig","oklab(0.8888888888888888 0.026777087506969912 0.024456466767531687)","oklab(0.42857142857142855 0.10328305181259818 0.09433208610333646)","oklab(0.2 0.04819875751254583 0.04402164018155702)",null],["trig/hyperbolic/real","hyperbolic trigonometry","oklab(0.8888888888888888 -0.0332276949642058 -0.014527610590630466)","oklab(0.42857142857142855 -0.12816396629050802 -0.0560350694210032)","oklab(0.2 -0.05980985093557042 -0.02614969906313483)","hyperbolic trig on real numbers"],["trig/hyperbolic/complex","hyperbolic trig (complexes)","oklab(0.8888888888888888 0.036044919860521704 -0.003986845163268072)","oklab(0.42857142857142855 0.13903040517629794 -0.015377831344033983)","oklab(0.2 0.06488085574893904 -0.007176321293882526)","hyperbolic trig on complex numbers"],["gamma","gamma functions","oklab(0.8888888888888888 -0.02575505378767436 0.0255305383120158)","oklab(0.42857142857142855 -0.09934092175245819 0.09847493348920376)","oklab(0.2 -0.04635909681781383 0.04595496896162843)","functions related to the factorial and its derivative"],["image","images","oklab(0.8888888888888888 -0.030243603940362462 0.020011386828648284)","oklab(0.42857142857142855 -0.11665390091282658 0.07718677776764335)","oklab(0.2 -0.054438487092652414 0.0360204962915669)","upload and manipulate images"],["unit/pkg","units","oklab(0.8888888888888888 0.007283736316937299 -0.03552574231979727)","oklab(0.42857142857142855 0.028094411508186715 -0.1370278632335037)","oklab(0.2 0.013110725370487136 -0.06394633617563507)","conversion functions and unit decompositions"],["text","text","oklab(0.8888888888888888 -0.007286102142977168 -0.03552525717949709)","oklab(0.42857142857142855 -0.028103536837197636 -0.13702599197806015)","oklab(0.2 -0.0131149838573589 -0.06394546292309475)","writing and outputting text"],["withseq","with (sequential)","oklab(0.8888888888888888 0.03001690665504107 -0.020349852504867375)","oklab(0.42857142857142855 0.11577949709801551 -0.07849228823305984)","oklab(0.2 0.05403043197907391 -0.036629734508761266)","an ordered variant of 'with'"],["4d/point","4D points","oklab(0.8888888888888888 0.03542865171519167 -0.007742210262641556)","oklab(0.42857142857142855 0.13665337090145352 -0.029862811013045987)","oklab(0.2 0.06377157308734499 -0.013935978472754797)","for when you need to pack four numbers into a single value"],["base","alternate bases","oklab(0.8888888888888888 -0.001776781109125852 0.03622118483701989)","oklab(0.42857142857142855 -0.006853298563771141 0.13971028437136238)","oklab(0.2 -0.003198205996426533 0.06519813270663578)","bases other than 2*5"],["chem/elements","chemical elements","oklab(0.8888888888888888 0.035435858713041266 0.0077091568525152875)","oklab(0.42857142857142855 0.13668116932173052 0.029735319288273238)","oklab(0.2 0.06378454568347425 0.013876482334527514)","and their properties"],["debug","debug utilities","oklab(0.8888888888888888 0.027165565651507437 0.02402422163028274)","oklab(0.42857142857142855 0.10478146751295721 0.09266485485966196)","oklab(0.2 0.04889801817271337 0.043243598934508916)","for project nya developers"],["geo/image","image objects","oklab(0.8888888888888888 0.030620380274485416 0.019429963817599104)","oklab(0.42857142857142855 0.11810718105872942 0.07494414615359651)","oklab(0.2 0.05511668449407373 0.034973934871678374)","on the graphpaper"],["ithkuil","ithkuil utilities","oklab(0.8888888888888888 0.014847151969235205 -0.03308614907343768)","oklab(0.42857142857142855 0.05726758616705005 -0.12761800356897385)","oklab(0.2 0.02672487354462336 -0.05955506833218781)","parsing, text and script generation, and consonant cluster checking for the Ithkuil language"],["num/quaternion","quaternions","oklab(0.8888888888888888 0.03416650390183778 -0.01215652883157893)","oklab(0.42857142857142855 0.13178508647851708 -0.04688946835037586)","oklab(0.2 0.06149970702330798 -0.02188175189684207)","rudimentary support for quaternions"],["slope-field","slope fields","oklab(0.8888888888888888 -0.03157388151911294 -0.017838755223510534)","oklab(0.42857142857142855 -0.12178497157372127 -0.06880662729068346)","oklab(0.2 -0.05683298673440327 -0.03210975940231896)","draw fields of slopes or vectors"],["special","special functions","oklab(0.8888888888888888 -0.02761231956230181 -0.023509380904154636)","oklab(0.42857142857142855 -0.10650466116887836 -0.09067904063031071)","oklab(0.2 -0.04970217521214324 -0.04231688562747833)","for uncomputable integrals and sums"],["sym/extras","extra symbolics","oklab(0.8888888888888888 0.030608961778007857 -0.019447946960534424)","oklab(0.42857142857142855 0.11806313828660168 -0.07501350970491845)","oklab(0.2 0.05509613120041413 -0.035006304528961946)","manipulate unevaluated expressions as values"]],"fns":{"<":[["<","compares two values via the < operator",[0],2]],">":[[">","compares two values via the > operator",[0],2]],"≤":[["≤","compares two values via the ≤ operator",[0],2]],"≥":[["≥","compares two values via the ≥ operator",[0],2]],"≮":[["≮","compares two values via the ≮ operator",[0],2]],"≯":[["≯","compares two values via the ≯ operator",[0],2]],"≰":[["≰","compares two values via the ≰ operator",[0],2]],"≱":[["≱","compares two values via the ≱ operator",[0],2]],"=":[["=","compares two values via the = operator",[0],2]],"≠":[["≠","compares two values via the ≠ operator",[0],2]],"valid":[["valid","returns true if a value is valid for the given type (whether a number is finite, whether a color is displayable, etc.)",[1,2,17],0]],"firstvalid":[["firstvalid","returns the first value which is valid for its type (the first finite number, the first color which is displayable, etc.)",[1],0]],"and":[["and","returns true if both inputs are true",[1,1],2]],"or":[["or","returns true if either of its inputs are true",[1,1],2]],"sign":[["sign","gets the sign of a number",[2,6],0]],"sgn":[["sign","gets the sign of a number",[2],0]],"ln":[["ln","takes the natural logarithm of a value",[2],0]],"log":[["log","takes the base-10 logarithm of a value",[2],0]],"log_":[["log with subscript","takes the logarithm of a value in some base",[2],0]],"exp":[["exp","raises e to some value",[2],0]],"unsign":[["unsign","takes the absolute value of the components of a value",[2,47],0]],"cmp":[["cmp","compares two numbers, returning -1, 0, or 1, depending on whether the first number is less than, equal to, or greater than the second number",[2],0]],"count":[["count","counts the size of a list",[2],0]],"rgb":[["rgb","creates a color given its red, green, and blue components",[3],0]],"hsv":[["hsv","creates a color given its hue (0-360), saturation (0-1), and value (0-1)",[3],0]],"-":[["-","negates its input",[4],1],["-","subtracts two values",[4],2],["-","subtracts one value from another",[4],4]],"+":[["+","unary plus; ensures a numeric value is passed",[4],1],["+","adds two values or points",[4],2],["+","adds two values",[4],4]],"·":[["·","multiplies two values",[4],2]],"÷":[["÷","divides two values",[4],2]],"⊙":[["⊙","multiplies multi-dimensional values component-by-component",[4],2]],"mod":[["mod","modulus operator (remainder-like)",[4],2]],"×":[["×","multiplies two real numbers",[4],2]],"↑":[["↑","raises a value to an exponent",[4],2]],"point":[["point","constructs a point from multi-dimensional values",[5,6],0]],"screendistance":[["screendistance","calculates the distance between two points in terms of pixels on your screen, rather than graphpaper units",[5],0]],"debugpoint":[["debugpoint","given some point p, returns a color depending on which side of the currently active shader pixel that point p is on",[5],0]],".x":[[".x","gets the x-coordinate of a point",[5],0]],".y":[[".y","gets the y-coordinate of a point",[5],0]],"arg":[["arg","returns the angle between a point and the x-axis",[6],0]],"conj":[["conj","takes the conjugate of a complex number or quaternion",[6,47],0]],"imag":[["imag","gets the imaginary part of a complex number",[6],0]],"real":[["real","gets the real part of a multi-dimensional number",[6,47],0]],"dot":[["dot","takes the dot product of two complex numbers",[6],0]],"complex":[["complex","converts a point into a complex number",[6],0]],".i":[[".i","gets the coefficient of 'i' in a multi-dimensional number",[6,47],0]],"cplot":[["cplot","gets the color a complex number would be represented by when performing domain coloring",[6],0]],"cplothue":[["cplothue","gets the hue a complex number would be represented by when performing domain coloring",[6],0]],"erf":[["erf","error function; related to area of a normal distribution",[8,12],0]],"erf^-1":[["erfinv","inverse error function",[8],0]],"min":[["min","returns the minimum of its inputs",[9],0]],"max":[["max","returns the maximum of its inputs",[9],0]],"total":[["total","returns the sum of its inputs",[9,22],0]],"mean":[["mean","takes the arithmetic mean of its inputs",[9],0]],"median":[["median","takes the median of its inputs",[9],0]],"quartile":[["quartile","computes a quartile of a data set",[9],0]],"quantile":[["quantile","computes a quantile of a data set or the inverse CDF of a distribution",[9],0]],"var":[["var","sample variance",[9],0]],"varp":[["varp","population variance",[9],0]],"stdev":[["stdev","sample standard deviation",[9],0]],"stdevp":[["stdevp","population standard deviation",[9],0]],"stddev":[["stdev","sample standard deviation",[9],0]],"stddevp":[["stdevp","population standard deviation",[9],0]],"mad":[["mad","mean absolute deviation",[9],0]],"cov":[["cov","sample covariance",[9],0]],"covp":[["covp","population covariance",[9],0]],"corr":[["corr","Pearson correlation coefficient",[9],0]],"stats":[["stats","computes a five-statistic summary",[9],0]],"ranks":[["ranks","computes the rank of each element of a list",[9],0]],"spearman":[["spearman","Spearman's rank correlation coefficient",[9],0]],"center":[["center","gets the center of a circle",[10],0]],"circle":[["circle","constructs a circle from a center and radius",[10],0]],"distance":[["distance","calculates the distance between two objects",[10],0]],"end":[["end","gets the ending point of a vector",[10],0]],"glider":[["glider","constructs a point on an object",[10],0]],"intersection":[["intersection","constructs the point where two objects intersect",[10],0]],"line":[["line","constructs a line between two points",[10],0]],"midpoint":[["midpoint","constructs the midpoint of a line segment or between two points",[10],0]],"parallel":[["parallel","creates a line parallel to an existing line which passes through some point",[10],0]],"perpendicular":[["perpendicular","creates a line perpendicular to an existing line which passes through some point",[10],0]],"polygon":[["polygon","constructs a polygon from a set of points",[10],0]],"radius":[["radius","measures the radius of a circle",[10],0]],"ray":[["ray","constructs a ray (a line going in a particular direction)",[10],0]],"segment":[["segment","constructs a line segment",[10],0]],"segments":[["segments","gets the segments which make up a polygon",[10],0]],"start":[["start","gets the starting point of a vector",[10],0]],"vector":[["vector","constructs a vector between two points",[10],0]],"vertices":[["vertices","gets the vertices which make up a polygon",[10],0]],"angle":[["angle","constructs an angle from three vertices",[10],0]],"directed angle":[["directedangle","constructs an angle with a particular direction",[10],0]],"angles":[["angles","constructs an angle at every vertex of a polygon",[10],0]],"directed angles":[["directedangles","constructs a directed angle at every vertex of a polygon",[10],0]],"angle bisector":[["anglebisector","constucts the bisector of an angle",[10],0]],"perpendicular bisector":[["perpendicularbisector","constucts the perpendicular bisector of a line segment or between two points",[10],0]],"arc":[["arc","constructs an arc from three points",[10],0]],"length":[["length","calculates the length of an object",[10],0]],"translate":[["translate","translates an object by a vector",[10],0]],"rotate":[["rotate","rotates an object around a point by some angle",[10],0]],"dilate":[["dilate","scales an object from some point by some scaling factor",[10],0]],"reflect":[["reflect","reflects an object across a line",[10],0]],"perimeter":[["perimeter","measures the perimeter of a polygon",[10],0]],"floor":[["floor","rounds down to the nearest integer",[11,29],0]],"ceil":[["ceil","rounds up to the nearest integer",[11,29],0]],"round":[["round","rounds to the nearest integer; ties are rounded up",[11,29],0]],"fract":[["fract","calculate x-floor(x), or the fractional part of x",[11,29],0]],"sin":[["sin","takes the sine of an angle",[14,33],0]],"cos":[["cos","takes the cosine of an angle",[14,33],0]],"tan":[["tan","takes the tangent of an angle",[14,33],0]],"csc":[["csc","takes the cosecant of an angle",[14,33],0]],"sec":[["sec","takes the secant of an angle",[14,33],0]],"cot":[["cot","takes the cotangent of an angle",[14,33],0]],"arcsin":[["arcsin","takes the inverse sine of a value",[14],0]],"arccos":[["arccos","takes the inverse cosine of a value",[14],0]],"arctan":[["arctan","takes the inverse tangent of a value",[14],0]],"arccsc":[["arccsc","takes the inverse cosecant of a value",[14],0]],"arcsec":[["arcsec","takes the inverse secant of a value",[14],0]],"arccot":[["arccot","takes the inverse cotangent of a value",[14],0]],"sin^-1":[["arcsin","takes the inverse sine of a value",[14],0]],"cos^-1":[["arccos","takes the inverse cosine of a value",[14],0]],"tan^-1":[["arctan","takes the inverse tangent of a value",[14],0]],"csc^-1":[["arccsc","takes the inverse cosecant of a value",[14],0]],"sec^-1":[["arcsec","takes the inverse secant of a value",[14],0]],"cot^-1":[["arccot","takes the inverse cotangent of a value",[14],0]],"arcsin^-1":[["sin","takes the sine of an angle",[14],0]],"arccos^-1":[["cos","takes the cosine of an angle",[14],0]],"arctan^-1":[["tan","takes the tangent of an angle",[14],0]],"arccsc^-1":[["csc","takes the cosecant of an angle",[14],0]],"arcsec^-1":[["sec","takes the secant of an angle",[14],0]],"arccot^-1":[["cot","takes the cotangent of an angle",[14],0]],"with":[["with","substitutes variables simultaneously",[15],4]],".z":[[".z","gets the z-coordinate of a point",[16,41],0]],"oklab":[["oklab","creates a color given its lightness, green-red, and blue-yellow components",[17],0]],"oklch":[["oklch","creates a color given its lightness, chromaticity, and hue components",[17],0]],"lightdark":[["lightdark","if a single color is passed, it will be inverted in dark mode; if two arguments are passed, the first is used for light mode and the second for dark mode",[17],0]],".r":[[".r","gets the red component of a color",[17],0]],".g":[[".g","gets the green component of a color",[17],0]],".b":[[".b","gets the blue component of a color",[17],0]],".a":[[".a","gets the alpha component of a color",[17],0]],".":[[".","dotted function calls",[18],4]],"normaldist":[["normaldist","creates a normal distribution",[19],0]],"tdist":[["tdist","creates a t-distribution",[19],0]],"boltzmanndist":[["boltzmanndist","creates a Maxwell-Boltzmann distribution",[19],0]],"uniformdist":[["uniformdist","creates a uniform distribution",[19],0]],"poissondist":[["poissondist","creates a Poisson distribution",[19],0]],"binomialdist":[["binomialdist","creates a binomial distribution",[19],0]],"pdf":[["pdf","probability distribution function",[19],0]],"cdf":[["cdf","cumulative distribution function",[19],0]],"cdf^-1":[["inversecdf","computes a quantile of a data set or the inverse CDF of a distribution",[19],0]],"inversecdf":[["inversecdf","computes a quantile of a data set or the inverse CDF of a distribution",[19],0]],"join":[["join","joins multiple lists into a single one",[20],0]],"for":[["for","performs a list comprehension",[20],4]],"sort":[["sort","sorts the elements of a list",[21],0]],"unique":[["unique","removes any duplicate elements in a list",[21],0]],"iterate":[["iterate","iterates a variable substitution",[28],5]],"forceshader":[["forceshader","forces the given expression to be executed in a shader",[30],0]],"forcejs":[["forcejs","evaluates an expression outside a shader, then passes the value to the shader",[30],6]],"sinh":[["sinh","takes the hyperbolic sinhe of an angle",[34],0]],"cosh":[["cosh","takes the hyperbolic coshine of an angle",[34],0]],"tanh":[["tanh","takes the hyperbolic tanhgent of an angle",[34],0]],"csch":[["csch","takes the hyperbolic cosecant of an angle",[34],0]],"sech":[["sech","takes the hyperbolic secant of an angle",[34],0]],"coth":[["coth","takes the hyperbolic cotangent of an angle",[34],0]],"arsinh":[["arsinh","takes the inverse hyperbolic sine of a value",[34],0]],"arcosh":[["arcosh","takes the inverse hyperbolic cosine of a value",[34],0]],"artanh":[["artanh","takes the inverse hyperbolic tangent of a value",[34],0]],"arcsch":[["arcsch","takes the inverse hyperbolic cosecant of a value",[34],0]],"arsech":[["arsech","takes the inverse hyperbolic secant of a value",[34],0]],"arcoth":[["arcoth","takes the inverse hyperbolic cotangent of a value",[34],0]],"arcsinh":[["arsinh","takes the inverse hyperbolic sine of a value",[34],0]],"arccosh":[["arcosh","takes the inverse hyperbolic cosine of a value",[34],0]],"arctanh":[["artanh","takes the inverse hyperbolic tangent of a value",[34],0]],"arccsch":[["arcsch","takes the inverse hyperbolic cosecant of a value",[34],0]],"arcsech":[["arsech","takes the inverse hyperbolic secant of a value",[34],0]],"arccoth":[["arcoth","takes the inverse hyperbolic cotangent of a value",[34],0]],"sinh^-1":[["arsinh","takes the inverse hyperbolic sine of a value",[34],0]],"cosh^-1":[["arcosh","takes the inverse hyperbolic cosine of a value",[34],0]],"tanh^-1":[["artanh","takes the inverse hyperbolic tangent of a value",[34],0]],"csch^-1":[["arcsch","takes the inverse hyperbolic cosecant of a value",[34],0]],"sech^-1":[["arsech","takes the inverse hyperbolic secant of a value",[34],0]],"coth^-1":[["arcoth","takes the inverse hyperbolic cotangent of a value",[34],0]],"arsinh^-1":[["sinh","takes the hyperbolic sinhe of an angle",[34],0]],"arcosh^-1":[["cosh","takes the hyperbolic coshine of an angle",[34],0]],"artanh^-1":[["tanh","takes the hyperbolic tanhgent of an angle",[34],0]],"arcsch^-1":[["csch","takes the hyperbolic cosecant of an angle",[34],0]],"arsech^-1":[["sech","takes the hyperbolic secant of an angle",[34],0]],"arcoth^-1":[["coth","takes the hyperbolic cotangent of an angle",[34],0]],"arcsinh^-1":[["sinh","takes the hyperbolic sinhe of an angle",[34],0]],"arccosh^-1":[["cosh","takes the hyperbolic coshine of an angle",[34],0]],"arctanh^-1":[["tanh","takes the hyperbolic tanhgent of an angle",[34],0]],"arccsch^-1":[["csch","takes the hyperbolic cosecant of an angle",[34],0]],"arcsech^-1":[["sech","takes the hyperbolic secant of an angle",[34],0]],"arccoth^-1":[["coth","takes the hyperbolic cotangent of an angle",[34],0]],"lngamma":[["lngamma","calculates the natural logarithm of the absolute value of the gamma function",[36],0]],"gamma":[["gamma","computes the gamma function",[36],0]],"digamma":[["digamma","computes the derivative of the natural logarithm of the gamma function",[36],0]],"polygamma":[["polygamma","computes repeated derivatives of the natural logarithm of the gamma function",[36],0]],"imgwidth":[["imgwidth","gets the natural width of an image",[37],0]],"imgheight":[["imgheight","gets the natural height of an image",[37],0]],"imgaspect":[["imgaspect","gets the preferred aspect ratio of an image",[37],0]],"intosi":[["intosi","converts a value to its component SI units",[38],0]],"in":[["in","converts values between units",[38],2]],"unit":[["unit","returns the unit with a given symbol",[38],7]],"concat":[["concat","concatenates one or more string-like values into a string",[39],0]],"withseq":[["withseq","substitutes variables in sequence",[40],4]],".w":[[".w","gets the w-coordinate of a point",[41],0]],"base":[["base","interprets numbers in <lhs> as if they were in base <rhs>",[42],4]],"eldiscoveredby":[["eldiscoveredby","gets the discoverer of an element",[43],0]],"elname":[["elname","gets the name of an element",[43],0]],"elappearance":[["elappearance","gets the appearance of an element",[43],0]],"elcategory":[["elcategory","gets the category of an element",[43],0]],"elnamedby":[["elnamedby","gets who named an element",[43],0]],"elphase":[["elphase","gets the phase of an element at STP",[43],0]],"eldescription":[["eldescription","gets a description of an element",[43],0]],"elsymbol":[["elsymbol","gets the symbol of an element",[43],0]],"elconfig":[["elconfig","gets the electron configuration of an element",[43],0]],"elconfigshort":[["elconfigshort","gets the electron configuration of an element using the noble gas shorthand",[43],0]],"elblock":[["elblock","gets the block an element is in on the periodic table",[43],0]],"mass":[["mass","gets the mass of an element",[43],0]],"elboil":[["elboil","boiling point of an element",[43],0]],"eleaffinity":[["eleaffinity","amount of energy released when an electron attaches to a neutral atom of this element",[43],0]],"elenegativity":[["elenegativity","tendency for an atom of an element to attract shared electrons in a chemical bond",[43],0]],"elmelt":[["elmelt","melting point of an element",[43],0]],"elmolarheat":[["elmolarheat","amount of energy required to increase the temperature of one mole of an element by one degree kelvin",[43],0]],"elnumber":[["elnumber","atomic number of an element",[43],0]],"elperiod":[["elperiod","period of an element in the periodic table",[43],0]],"element":[["element","returns the element with a given symbol",[43],7]],"debugast":[["debugast","returns the AST of its input",[44],6]],"image":[["image","draws an image on the graphpaper; pass a number to override the preferred aspect ratio",[45],0]],"ithkuil gloss":[["ithkuilgloss","glosses an ithkuil word",[46],0]],"ithkuil ungloss":[["ithkuilungloss","unglosses an ithkuil word",[46],0]],"ithkuil script":[["ithkuilscript","converts an ithkuil word into script form",[46],0]],"ithkuil values":[["ithkuilvalues","given the name of a grammatical category of ithkuil, returns all values it can take",[46],0]],"ithkuil valid":[["ithkuilvalid","checks if a consonant form is valid according to ithkuil phonotactics",[46],0]],"ithkuil valid initial":[["ithkuilvalidinitial","checks if a consonant form is valid word-initially according to ithkuil phonotactics",[46],0]],"ithkuil valid final":[["ithkuilvalidfinal","checks if a consonant form is valid word-finally according to ithkuil phonotactics",[46],0]],"ithkuil ca":[["ithkuilca","generates an ithkuil CA form, optionally geminated",[46],0]],".j":[[".j","gets the coefficient of 'j' in a quaternion",[47],0]],".k":[[".k","gets the coefficient of 'k' in a quaternion",[47],0]],"slopefield":[["slopefield","generates a slope or vector field",[48],6]],"zeta":[["zeta","computes the Riemann zeta function",[49],0]],"faddeeva":[["faddeeva","scaled complex error function",[49],0]],"sym":[["sym","creates a symbolic expression",[50],6]],"unsym":[["unsym","interpolates a value into a symbolic expression",[50],6]],"eval":[["eval","evaluates a symbolic expression in the current evaluation context",[50],6]]}}
