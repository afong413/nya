{"packages":[["core/cmp","comparison operators","oklab(0.8888888888888888 0.020423028974164092 0.029967166526512976)","oklab(0.1111111111111111 0.020423028974164082 0.029967166526512958)"],["bool","boolean operations","oklab(0.8888888888888888 0.004379075199769348 -0.03599937336263051)","oklab(0.1111111111111111 0.004379075199769346 -0.03599937336263049)"],["num/real","real numbers","oklab(0.8888888888888888 0.0233586677532883 0.027739931919505415)","oklab(0.1111111111111111 0.023358667753288286 0.027739931919505398)"],["geo/point","geometric points","oklab(0.8888888888888888 -0.030297876858873182 0.01992912040085721)","oklab(0.1111111111111111 -0.030297876858873165 0.0199291204008572)"],["color/core","color functions core","oklab(0.8888888888888888 -0.02865592900420965 -0.02222541147004937)","oklab(0.1111111111111111 -0.028655929004209633 -0.022225411470049358)"],["core/ops","basic operators","oklab(0.8888888888888888 0.03227869433701314 0.0165292792947842)","oklab(0.1111111111111111 0.03227869433701312 0.016529279294784194)"],["num/complex","complex numbers","oklab(0.8888888888888888 0.010278357228010857 -0.03477767322292714)","oklab(0.1111111111111111 0.01027835722801085 -0.034777673222927116)"],["number-theory","number theory","oklab(0.8888888888888888 -0.022385212181846595 -0.02853127157490554)","oklab(0.1111111111111111 -0.02238521218184658 -0.028531271574905523)"],["text","text","oklab(0.8888888888888888 -0.03128102827860997 -0.018347437203601744)","oklab(0.1111111111111111 -0.03128102827860995 -0.018347437203601734)"],["trig/real","trigonometry","oklab(0.8888888888888888 0.017756078119958416 -0.03162045021667528)","oklab(0.1111111111111111 0.01775607811995841 -0.03162045021667526)"],["3d/point","3D points","oklab(0.8888888888888888 -0.004811269214953045 -0.035944163234780564)","oklab(0.1111111111111111 -0.004811269214953042 -0.03594416323478054)"],["4d/point","4D points","oklab(0.8888888888888888 0.01683711190427753 0.03211919744996973)","oklab(0.1111111111111111 0.01683711190427752 0.03211919744996971)"],["base","alternate bases","oklab(0.8888888888888888 0.012592313259375782 0.03400830529275246)","oklab(0.1111111111111111 0.012592313259375775 0.034008305292752436)"],["chem/elements","chemical elements","oklab(0.8888888888888888 0.03510882441142891 0.009083040820934342)","oklab(0.1111111111111111 0.03510882441142889 0.009083040820934337)"],["color/extras","color functions extended","oklab(0.8888888888888888 -0.03130794341155658 -0.018301471565042988)","oklab(0.1111111111111111 -0.031307943411556564 -0.018301471565042977)"],["core/fn","functions","oklab(0.8888888888888888 0.026181241225279112 -0.025093301696091162)","oklab(0.1111111111111111 0.026181241225279095 -0.02509330169609115)"],["data/distributions","statistical distributions","oklab(0.8888888888888888 -0.008631568761607528 -0.035222538279075614)","oklab(0.1111111111111111 -0.008631568761607524 -0.035222538279075594)"],["data/list","core list functionality","oklab(0.8888888888888888 0.03510178917154028 -0.009110190945531456)","oklab(0.1111111111111111 0.03510178917154026 -0.00911019094553145)"],["data/list-extras","extra list functions","oklab(0.8888888888888888 0.02827366105976867 -0.022709717576064804)","oklab(0.1111111111111111 0.028273661059768654 -0.02270971757606479)"],["data/statistics","statistics","oklab(0.8888888888888888 -0.022328143347524015 -0.028575954870480272)","oklab(0.1111111111111111 -0.022328143347524 -0.028575954870480254)"],["data/statistics-complex","complex statistics","oklab(0.8888888888888888 0.012990486207252027 -0.03385821097173477)","oklab(0.1111111111111111 0.01299048620725202 -0.03385821097173475)"],["debug","debug utilities","oklab(0.8888888888888888 -0.028021604265792092 -0.02302001034922983)","oklab(0.1111111111111111 -0.028021604265792074 -0.02302001034922982)"],["eval","evaluator","oklab(0.8888888888888888 -0.035993279175610286 -0.004428886574962726)","oklab(0.1111111111111111 -0.035993279175610265 -0.004428886574962723)"],["factorial","factorial","oklab(0.8888888888888888 0.032336129854426326 -0.016416634495077978)","oklab(0.1111111111111111 0.03233612985442631 -0.016416634495077968)"],["geo/dcg","geometry","oklab(0.8888888888888888 0.0007324779887472103 0.03625733936878583)","oklab(0.1111111111111111 0.0007324779887472099 0.03625733936878581)"],["geo/image","image objects","oklab(0.8888888888888888 0.03560435343268646 0.00688920886224636)","oklab(0.1111111111111111 0.03560435343268644 0.006889208862246357)"],["gridlines","gridlines","oklab(0.8888888888888888 0.0006276829581391549 -0.0362593049604011)","oklab(0.1111111111111111 0.0006276829581391546 -0.03625930496040108)"],["image","images","oklab(0.8888888888888888 -0.015994452581396427 0.03254702242492802)","oklab(0.1111111111111111 -0.01599445258139642 0.032547022424928)"],["item/docs-fn","inline function docs","oklab(0.8888888888888888 0.03626230648853055 -0.0004198931282851852)","oklab(0.1111111111111111 0.03626230648853053 -0.00041989312828518495)"],["item/folder","folders","oklab(0.8888888888888888 0.015708990023968177 -0.032685758588935555)","oklab(0.1111111111111111 0.01570899002396817 -0.032685758588935535)"],["item/note","notes","oklab(0.8888888888888888 0.03609253838414792 0.0035298519935139986)","oklab(0.1111111111111111 0.0360925383841479 0.003529851993513997)"],["iterate","iterate","oklab(0.8888888888888888 -0.034200623884108584 0.012060203482738074)","oklab(0.1111111111111111 -0.034200623884108564 0.012060203482738067)"],["ithkuil","ithkuil utilities","oklab(0.8888888888888888 0.015122060680274992 0.03296140869091287)","oklab(0.1111111111111111 0.015122060680274984 0.03296140869091286)"],["num/quaternion","quaternions","oklab(0.8888888888888888 -0.03324228758788258 -0.014494188422668364)","oklab(0.1111111111111111 -0.033242287587882564 -0.014494188422668355)"],["number-theory-complex","complex number theory","oklab(0.8888888888888888 0.033238262862964475 0.014503415596327047)","oklab(0.1111111111111111 0.033238262862964454 0.014503415596327039)"],["shader","shaders","oklab(0.8888888888888888 -0.036081029348428106 -0.003645614250736881)","oklab(0.1111111111111111 -0.036081029348428086 -0.003645614250736879)"],["slider","sliders","oklab(0.8888888888888888 0.036199909399923035 -0.002167427402398959)","oklab(0.1111111111111111 0.036199909399923014 -0.002167427402398958)"],["slope-field","slope fields","oklab(0.8888888888888888 -0.008055674359293727 0.03535869472596979)","oklab(0.1111111111111111 -0.008055674359293724 0.035358694725969766)"],["special","special functions","oklab(0.8888888888888888 -0.025481880480115276 -0.025803196493931257)","oklab(0.1111111111111111 -0.02548188048011526 -0.02580319649393124)"],["sym/core","symbolics core","oklab(0.8888888888888888 0.026222140125028496 0.025050559861421785)","oklab(0.1111111111111111 0.026222140125028482 0.02505055986142177)"],["sym/deriv","derivatives","oklab(0.8888888888888888 0.032569759523782 0.01594810166353091)","oklab(0.1111111111111111 0.03256975952378199 0.015948101663530903)"],["sym/extras","extra symbolics","oklab(0.8888888888888888 -0.0076190607767156245 0.03545533944257225)","oklab(0.1111111111111111 -0.00761906077671562 0.03545533944257223)"],["trig/complex","complex trig","oklab(0.8888888888888888 0.007440699477582847 0.03549319897376967)","oklab(0.1111111111111111 0.0074406994775828425 0.03549319897376965)"],["trig/hyperbolic/real","hyperbolic trigonometry","oklab(0.8888888888888888 0.00499312343713292 -0.03591935272870128)","oklab(0.1111111111111111 0.004993123437132916 -0.03591935272870126)"],["trig/hyperbolic/complex","hyperbolic trig (complexes)","oklab(0.8888888888888888 -0.02407614487569257 0.02711955807220996)","oklab(0.1111111111111111 -0.024076144875692557 0.02711955807220994)"],["unit/pkg","units","oklab(0.8888888888888888 0.03236117844658757 0.016367202316077786)","oklab(0.1111111111111111 0.03236117844658755 0.016367202316077776)"],["with","with","oklab(0.8888888888888888 -0.016256721831108913 -0.03241681935991335)","oklab(0.1111111111111111 -0.016256721831108906 -0.03241681935991333)"],["withseq","with (sequential)","oklab(0.8888888888888888 0.012928655758804062 -0.0338818689327736)","oklab(0.1111111111111111 0.012928655758804053 -0.033881868932773576)"]],"fns":{"<":[["<","compares two values via the < operator",[0],2]],">":[[">","compares two values via the > operator",[0],2]],"≤":[["≤","compares two values via the ≤ operator",[0],2]],"≥":[["≥","compares two values via the ≥ operator",[0],2]],"≮":[["≮","compares two values via the ≮ operator",[0],2]],"≯":[["≯","compares two values via the ≯ operator",[0],2]],"≰":[["≰","compares two values via the ≰ operator",[0],2]],"≱":[["≱","compares two values via the ≱ operator",[0],2]],"=":[["=","compares two values via the = operator",[0],2]],"≠":[["≠","compares two values via the ≠ operator",[0],2]],"valid":[["valid","returns true if a value is valid for the given type (whether a number is finite, whether a color is displayable, etc.)",[1,2,14],0]],"firstvalid":[["firstvalid","returns the first value which is valid for its type (the first finite number, the first color which is displayable, etc.)",[1],0]],"and":[["and","returns true if both inputs are true",[1,1],2]],"or":[["or","returns true if either of its inputs are true",[1,1],2]],"sign":[["sign","gets the sign of a number",[2,6],0]],"sgn":[["sign","gets the sign of a number",[2],0]],"ln":[["ln","takes the natural logarithm of a value",[2],0]],"log":[["log","takes the base-10 logarithm of a value",[2],0]],"log_":[["log with subscript","takes the logarithm of a value in some base",[2],0]],"exp":[["exp","raises e to some value",[2],0]],"unsign":[["unsign","takes the absolute value of the components of a value",[2,33],0]],"cmp":[["cmp","compares two numbers, returning -1, 0, or 1, depending on whether the first number is less than, equal to, or greater than the second number",[2],0]],"count":[["count","counts the size of a list",[2],0]],"point":[["point","constructs a point from multi-dimensional values",[3,6],0]],"screendistance":[["screendistance","calculates the distance between two points in terms of pixels on your screen, rather than graphpaper units",[3],0]],"debugpoint":[["debugpoint","given some point p, returns a color depending on which side of the currently active shader pixel that point p is on",[3],0]],".x":[[".x","gets the x-coordinate of a point",[3],0]],".y":[[".y","gets the y-coordinate of a point",[3],0]],"rgb":[["rgb","creates a color given its red, green, and blue components",[4],0]],"hsv":[["hsv","creates a color given its hue (0-360), saturation (0-1), and value (0-1)",[4],0]],"-":[["-","negates its input",[5],1],["-","subtracts two values",[5],2],["-","subtracts one value from another",[5],4]],"+":[["+","unary plus; ensures a numeric value is passed",[5],1],["+","adds two values or points",[5],2],["+","adds two values",[5],4]],"·":[["·","multiplies two values",[5],2]],"÷":[["÷","divides two values",[5],2]],"⊙":[["⊙","multiplies multi-dimensional values component-by-component",[5],2]],"mod":[["mod","modulus operator (remainder-like)",[5],2]],"×":[["×","multiplies two real numbers",[5],2]],"↑":[["↑","raises a value to an exponent",[5],2]],"arg":[["arg","returns the angle between a point and the x-axis",[6],0]],"conj":[["conj","takes the conjugate of a complex number or quaternion",[6,33],0]],"imag":[["imag","gets the imaginary part of a complex number",[6],0]],"real":[["real","gets the real part of a multi-dimensional number",[6,33],0]],"dot":[["dot","takes the dot product of two complex numbers",[6],0]],"complex":[["complex","converts a point into a complex number",[6],0]],".i":[[".i","gets the coefficient of 'i' in a multi-dimensional number",[6,33],0]],"cplot":[["cplot","gets the color a complex number would be represented by when performing domain coloring",[6],0]],"cplothue":[["cplothue","gets the hue a complex number would be represented by when performing domain coloring",[6],0]],"floor":[["floor","rounds down to the nearest integer",[7,34],0]],"ceil":[["ceil","rounds up to the nearest integer",[7,34],0]],"round":[["round","rounds to the nearest integer; ties are rounded up",[7,34],0]],"fract":[["fract","calculate x-floor(x), or the fractional part of x",[7,34],0]],"concat":[["concat","concatenates one or more string-like values into a string",[8],0]],"sin":[["sin","takes the sine of an angle",[9,42],0]],"cos":[["cos","takes the cosine of an angle",[9,42],0]],"tan":[["tan","takes the tangent of an angle",[9,42],0]],"csc":[["csc","takes the cosecant of an angle",[9,42],0]],"sec":[["sec","takes the secant of an angle",[9,42],0]],"cot":[["cot","takes the cotangent of an angle",[9,42],0]],"arcsin":[["arcsin","takes the inverse sine of a value",[9],0]],"arccos":[["arccos","takes the inverse cosine of a value",[9],0]],"arctan":[["arctan","takes the inverse tangent of a value",[9],0]],"arccsc":[["arccsc","takes the inverse cosecant of a value",[9],0]],"arcsec":[["arcsec","takes the inverse secant of a value",[9],0]],"arccot":[["arccot","takes the inverse cotangent of a value",[9],0]],"sin^-1":[["arcsin","takes the inverse sine of a value",[9],0]],"cos^-1":[["arccos","takes the inverse cosine of a value",[9],0]],"tan^-1":[["arctan","takes the inverse tangent of a value",[9],0]],"csc^-1":[["arccsc","takes the inverse cosecant of a value",[9],0]],"sec^-1":[["arcsec","takes the inverse secant of a value",[9],0]],"cot^-1":[["arccot","takes the inverse cotangent of a value",[9],0]],"arcsin^-1":[["sin","takes the sine of an angle",[9],0]],"arccos^-1":[["cos","takes the cosine of an angle",[9],0]],"arctan^-1":[["tan","takes the tangent of an angle",[9],0]],"arccsc^-1":[["csc","takes the cosecant of an angle",[9],0]],"arcsec^-1":[["sec","takes the secant of an angle",[9],0]],"arccot^-1":[["cot","takes the cotangent of an angle",[9],0]],".z":[[".z","gets the z-coordinate of a point",[10,11],0]],".w":[[".w","gets the w-coordinate of a point",[11],0]],"base":[["base","interprets numbers in <lhs> as if they were in base <rhs>",[12],4]],"eldiscoveredby":[["eldiscoveredby","gets the discoverer of an element",[13],0]],"elname":[["elname","gets the name of an element",[13],0]],"elappearance":[["elappearance","gets the appearance of an element",[13],0]],"elcategory":[["elcategory","gets the category of an element",[13],0]],"elnamedby":[["elnamedby","gets who named an element",[13],0]],"elphase":[["elphase","gets the phase of an element at STP",[13],0]],"eldescription":[["eldescription","gets a description of an element",[13],0]],"elsymbol":[["elsymbol","gets the symbol of an element",[13],0]],"elconfig":[["elconfig","gets the electron configuration of an element",[13],0]],"elconfigshort":[["elconfigshort","gets the electron configuration of an element using the noble gas shorthand",[13],0]],"elblock":[["elblock","gets the block an element is in on the periodic table",[13],0]],"mass":[["mass","gets the mass of an element",[13],0]],"elboil":[["elboil","boiling point of an element",[13],0]],"eleaffinity":[["eleaffinity","amount of energy released when an electron attaches to a neutral atom of this element",[13],0]],"elenegativity":[["elenegativity","tendency for an atom of an element to attract shared electrons in a chemical bond",[13],0]],"elmelt":[["elmelt","melting point of an element",[13],0]],"elmolarheat":[["elmolarheat","amount of energy required to increase the temperature of one mole of an element by one degree kelvin",[13],0]],"elnumber":[["elnumber","atomic number of an element",[13],0]],"elperiod":[["elperiod","period of an element in the periodic table",[13],0]],"element":[["element","returns the element with a given symbol",[13],7]],"oklab":[["oklab","creates a color given its lightness, green-red, and blue-yellow components",[14],0]],"oklch":[["oklch","creates a color given its lightness, chromaticity, and hue components",[14],0]],"lightdark":[["lightdark","if a single color is passed, it will be inverted in dark mode; if two arguments are passed, the first is used for light mode and the second for dark mode",[14],0]],".r":[[".r","gets the red component of a color",[14],0]],".g":[[".g","gets the green component of a color",[14],0]],".b":[[".b","gets the blue component of a color",[14],0]],".a":[[".a","gets the alpha component of a color",[14],0]],".":[[".","dotted function calls",[15],4]],"normaldist":[["normaldist","creates a normal distribution",[16],0]],"tdist":[["tdist","creates a t-distribution",[16],0]],"boltzmanndist":[["boltzmanndist","creates a Maxwell-Boltzmann distribution",[16],0]],"uniformdist":[["uniformdist","creates a uniform distribution",[16],0]],"poissondist":[["poissondist","creates a Poisson distribution",[16],0]],"binomialdist":[["binomialdist","creates a binomial distribution",[16],0]],"erf":[["erf","error function; related to area of a normal distribution",[16],0]],"erf^-1":[["erfinv","inverse error function",[16],0]],"faddeeva":[["faddeeva","scaled complex error function",[16],0]],"pdf":[["pdf","probability distribution function",[16],0]],"cdf":[["cdf","cumulative distribution function",[16],0]],"cdf^-1":[["inversecdf","computes a quantile of a data set or the inverse CDF of a distribution",[16],0]],"inversecdf":[["inversecdf","computes a quantile of a data set or the inverse CDF of a distribution",[16],0]],"join":[["join","joins multiple lists into a single one",[17],0]],"for":[["for","performs a list comprehension",[17],4]],"sort":[["sort","sorts the elements of a list",[18],0]],"unique":[["unique","removes any duplicate elements in a list",[18],0]],"min":[["min","returns the minimum of its inputs",[19],0]],"max":[["max","returns the maximum of its inputs",[19],0]],"total":[["total","returns the sum of its inputs",[19,20],0]],"mean":[["mean","takes the arithmetic mean of its inputs",[19],0]],"median":[["median","takes the median of its inputs",[19],0]],"quartile":[["quartile","computes a quartile of a data set",[19],0]],"quantile":[["quantile","computes a quantile of a data set or the inverse CDF of a distribution",[19],0]],"var":[["var","sample variance",[19],0]],"varp":[["varp","population variance",[19],0]],"stdev":[["stdev","sample standard deviation",[19],0]],"stdevp":[["stdevp","population standard deviation",[19],0]],"stddev":[["stdev","sample standard deviation",[19],0]],"stddevp":[["stdevp","population standard deviation",[19],0]],"mad":[["mad","mean absolute deviation",[19],0]],"cov":[["cov","sample covariance",[19],0]],"covp":[["covp","population covariance",[19],0]],"corr":[["corr","Pearson correlation coefficient",[19],0]],"stats":[["stats","computes a five-statistic summary",[19],0]],"ranks":[["ranks","computes the rank of each element of a list",[19],0]],"spearman":[["spearman","Spearman's rank correlation coefficient",[19],0]],"debugast":[["debugast","returns the AST of its input",[21],6]],"lngamma":[["lngamma","calculates the natural logarithm of the absolute value of the gamma function",[23],0]],"gamma":[["gamma","computes the gamma function",[23],0]],"center":[["center","gets the center of a circle",[24],0]],"circle":[["circle","constructs a circle from a center and radius",[24],0]],"distance":[["distance","calculates the distance between two objects",[24],0]],"end":[["end","gets the ending point of a vector",[24],0]],"glider":[["glider","constructs a point on an object",[24],0]],"intersection":[["intersection","constructs the point where two objects intersect",[24],0]],"line":[["line","constructs a line between two points",[24],0]],"midpoint":[["midpoint","constructs the midpoint of a line segment or between two points",[24],0]],"parallel":[["parallel","creates a line parallel to an existing line which passes through some point",[24],0]],"perpendicular":[["perpendicular","creates a line perpendicular to an existing line which passes through some point",[24],0]],"polygon":[["polygon","constructs a polygon from a set of points",[24],0]],"radius":[["radius","measures the radius of a circle",[24],0]],"ray":[["ray","constructs a ray (a line going in a particular direction)",[24],0]],"segment":[["segment","constructs a line segment",[24],0]],"segments":[["segments","gets the segments which make up a polygon",[24],0]],"start":[["start","gets the starting point of a vector",[24],0]],"vector":[["vector","constructs a vector between two points",[24],0]],"vertices":[["vertices","gets the vertices which make up a polygon",[24],0]],"angle":[["angle","constructs an angle from three vertices",[24],0]],"directed angle":[["directedangle","constructs an angle with a particular direction",[24],0]],"angles":[["angles","constructs an angle at every vertex of a polygon",[24],0]],"directed angles":[["directedangles","constructs a directed angle at every vertex of a polygon",[24],0]],"angle bisector":[["anglebisector","constucts the bisector of an angle",[24],0]],"perpendicular bisector":[["perpendicularbisector","constucts the perpendicular bisector of a line segment or between two points",[24],0]],"arc":[["arc","constructs an arc from three points",[24],0]],"length":[["length","calculates the length of an object",[24],0]],"translate":[["translate","translates an object by a vector",[24],0]],"rotate":[["rotate","rotates an object around a point by some angle",[24],0]],"dilate":[["dilate","scales an object from some point by some scaling factor",[24],0]],"reflect":[["reflect","reflects an object across a line",[24],0]],"perimeter":[["perimeter","measures the perimeter of a polygon",[24],0]],"image":[["image","draws an image on the graphpaper; pass a number to override the preferred aspect ratio",[25],0]],"imgwidth":[["imgwidth","gets the natural width of an image",[27],0]],"imgheight":[["imgheight","gets the natural height of an image",[27],0]],"imgaspect":[["imgaspect","gets the preferred aspect ratio of an image",[27],0]],"iterate":[["iterate","iterates a variable substitution",[31],5]],"ithkuil gloss":[["ithkuilgloss","glosses an ithkuil word",[32],0]],"ithkuil ungloss":[["ithkuilungloss","unglosses an ithkuil word",[32],0]],"ithkuil script":[["ithkuilscript","converts an ithkuil word into script form",[32],0]],"ithkuil values":[["ithkuilvalues","given the name of a grammatical category of ithkuil, returns all values it can take",[32],0]],"ithkuil valid":[["ithkuilvalid","checks if a consonant form is valid according to ithkuil phonotactics",[32],0]],"ithkuil valid initial":[["ithkuilvalidinitial","checks if a consonant form is valid word-initially according to ithkuil phonotactics",[32],0]],"ithkuil valid final":[["ithkuilvalidfinal","checks if a consonant form is valid word-finally according to ithkuil phonotactics",[32],0]],"ithkuil ca":[["ithkuilca","generates an ithkuil CA form, optionally geminated",[32],0]],".j":[[".j","gets the coefficient of 'j' in a quaternion",[33],0]],".k":[[".k","gets the coefficient of 'k' in a quaternion",[33],0]],"forceshader":[["forceshader","forces the given expression to be executed in a shader",[35],0]],"forcejs":[["forcejs","evaluates an expression outside a shader, then passes the value to the shader",[35],6]],"slopefield":[["slopefield","generates a slope or vector field",[37],6]],"zeta":[["zeta","computes the Riemann zeta function",[38],0]],"sym":[["sym","creates a symbolic expression",[41],6]],"unsym":[["unsym","interpolates a value into a symbolic expression",[41],6]],"eval":[["eval","evaluates a symbolic expression in the current evaluation context",[41],6]],"sinh":[["sinh","takes the hyperbolic sinhe of an angle",[43],0]],"cosh":[["cosh","takes the hyperbolic coshine of an angle",[43],0]],"tanh":[["tanh","takes the hyperbolic tanhgent of an angle",[43],0]],"csch":[["csch","takes the hyperbolic cosecant of an angle",[43],0]],"sech":[["sech","takes the hyperbolic secant of an angle",[43],0]],"coth":[["coth","takes the hyperbolic cotangent of an angle",[43],0]],"arsinh":[["arsinh","takes the inverse hyperbolic sine of a value",[43],0]],"arcosh":[["arcosh","takes the inverse hyperbolic cosine of a value",[43],0]],"artanh":[["artanh","takes the inverse hyperbolic tangent of a value",[43],0]],"arcsch":[["arcsch","takes the inverse hyperbolic cosecant of a value",[43],0]],"arsech":[["arsech","takes the inverse hyperbolic secant of a value",[43],0]],"arcoth":[["arcoth","takes the inverse hyperbolic cotangent of a value",[43],0]],"arcsinh":[["arsinh","takes the inverse hyperbolic sine of a value",[43],0]],"arccosh":[["arcosh","takes the inverse hyperbolic cosine of a value",[43],0]],"arctanh":[["artanh","takes the inverse hyperbolic tangent of a value",[43],0]],"arccsch":[["arcsch","takes the inverse hyperbolic cosecant of a value",[43],0]],"arcsech":[["arsech","takes the inverse hyperbolic secant of a value",[43],0]],"arccoth":[["arcoth","takes the inverse hyperbolic cotangent of a value",[43],0]],"sinh^-1":[["arsinh","takes the inverse hyperbolic sine of a value",[43],0]],"cosh^-1":[["arcosh","takes the inverse hyperbolic cosine of a value",[43],0]],"tanh^-1":[["artanh","takes the inverse hyperbolic tangent of a value",[43],0]],"csch^-1":[["arcsch","takes the inverse hyperbolic cosecant of a value",[43],0]],"sech^-1":[["arsech","takes the inverse hyperbolic secant of a value",[43],0]],"coth^-1":[["arcoth","takes the inverse hyperbolic cotangent of a value",[43],0]],"arsinh^-1":[["sinh","takes the hyperbolic sinhe of an angle",[43],0]],"arcosh^-1":[["cosh","takes the hyperbolic coshine of an angle",[43],0]],"artanh^-1":[["tanh","takes the hyperbolic tanhgent of an angle",[43],0]],"arcsch^-1":[["csch","takes the hyperbolic cosecant of an angle",[43],0]],"arsech^-1":[["sech","takes the hyperbolic secant of an angle",[43],0]],"arcoth^-1":[["coth","takes the hyperbolic cotangent of an angle",[43],0]],"arcsinh^-1":[["sinh","takes the hyperbolic sinhe of an angle",[43],0]],"arccosh^-1":[["cosh","takes the hyperbolic coshine of an angle",[43],0]],"arctanh^-1":[["tanh","takes the hyperbolic tanhgent of an angle",[43],0]],"arccsch^-1":[["csch","takes the hyperbolic cosecant of an angle",[43],0]],"arcsech^-1":[["sech","takes the hyperbolic secant of an angle",[43],0]],"arccoth^-1":[["coth","takes the hyperbolic cotangent of an angle",[43],0]],"intosi":[["intosi","converts a value to its component SI units",[45],0]],"in":[["in","converts values between units",[45],2]],"unit":[["unit","returns the unit with a given symbol",[45],7]],"with":[["with","substitutes variables simultaneously",[46],4]],"withseq":[["withseq","substitutes variables in sequence",[47],4]]}}
