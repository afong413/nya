{"packages":[["3d/point","3D points","oklab(0.8888888888888888 -0.009768427336638052 -0.034924332627498104)","oklab(0.1111111111111111 -0.009768427336638047 -0.034924332627498084)"],["4d/point","4D points","oklab(0.8888888888888888 0.020716076606604353 -0.02976533809881228)","oklab(0.1111111111111111 0.02071607660660434 -0.029765338098812263)"],["base","alternate bases","oklab(0.8888888888888888 0.004562713531889662 0.03597655941489148)","oklab(0.1111111111111111 0.004562713531889659 0.03597655941489146)"],["bool","boolean operations","oklab(0.8888888888888888 0.02418578045252714 0.0270218283246982)","oklab(0.1111111111111111 0.024185780452527127 0.027021828324698183)"],["chem/elements","chemical elements","oklab(0.8888888888888888 -0.035512394200887476 0.0073485400065645525)","oklab(0.1111111111111111 -0.035512394200887455 0.007348540006564548)"],["color/core","color functions core","oklab(0.8888888888888888 0.031898299778288036 -0.017251946364447553)","oklab(0.1111111111111111 0.03189829977828802 -0.017251946364447542)"],["color/extras","color functions extended","oklab(0.8888888888888888 -0.02383727899110139 0.027329751415036733)","oklab(0.1111111111111111 -0.023837278991101375 0.02732975141503672)"],["core/cmp","comparison operators","oklab(0.8888888888888888 0.029754208078108423 0.020732059322506616)","oklab(0.1111111111111111 0.029754208078108406 0.020732059322506605)"],["core/fn","functions","oklab(0.8888888888888888 -0.01896897138844332 -0.030908078338384687)","oklab(0.1111111111111111 -0.01896897138844331 -0.030908078338384666)"],["core/ops","basic operators","oklab(0.8888888888888888 -0.029079237387738623 0.021668620977229953)","oklab(0.1111111111111111 -0.02907923738773861 0.02166862097722994)"],["data/distributions","statistical distributions","oklab(0.8888888888888888 -0.03252596762271947 -0.016037225829709793)","oklab(0.1111111111111111 -0.03252596762271945 -0.016037225829709782)"],["data/list","core list functionality","oklab(0.8888888888888888 -0.02131985756054201 -0.02933589704961322)","oklab(0.1111111111111111 -0.021319857560541996 -0.029335897049613202)"],["data/list-extras","extra list functions","oklab(0.8888888888888888 -0.007913415582826187 0.03539080439776397)","oklab(0.1111111111111111 -0.007913415582826183 0.03539080439776395)"],["data/statistics","statistics","oklab(0.8888888888888888 0.017444162961754626 -0.03179358993053559)","oklab(0.1111111111111111 0.017444162961754616 -0.03179358993053557)"],["data/statistics-complex","complex statistics","oklab(0.8888888888888888 -0.036218789113869214 -0.001824964994835558)","oklab(0.1111111111111111 -0.03621878911386919 -0.001824964994835557)"],["debug","debug utilities","oklab(0.8888888888888888 -0.013393319948563773 0.03370089261225449)","oklab(0.1111111111111111 -0.013393319948563765 0.03370089261225447)"],["eval","evaluator","oklab(0.8888888888888888 0.036248803412097415 0.0010749108327767307)","oklab(0.1111111111111111 0.036248803412097394 0.0010749108327767303)"],["factorial","factorial","oklab(0.8888888888888888 -0.03202644711148944 0.017012873582151707)","oklab(0.1111111111111111 -0.03202644711148943 0.017012873582151696)"],["geo/dcg","geometry","oklab(0.8888888888888888 0.02021884134850704 0.030105309110374668)","oklab(0.1111111111111111 0.02021884134850703 0.03010530911037465)"],["geo/image","image objects","oklab(0.8888888888888888 -0.029752177540137998 -0.020734973202958668)","oklab(0.1111111111111111 -0.02975217754013798 -0.020734973202958654)"],["geo/point","geometric points","oklab(0.8888888888888888 0.029510330567648 -0.02107775063652301)","oklab(0.1111111111111111 0.029510330567647982 -0.021077750636522997)"],["gridlines","gridlines","oklab(0.8888888888888888 0.035023329503714534 -0.009407314844393439)","oklab(0.1111111111111111 0.03502332950371451 -0.009407314844393434)"],["image","images","oklab(0.8888888888888888 -0.03540878566823458 0.007832565327421888)","oklab(0.1111111111111111 -0.035408785668234556 0.007832565327421884)"],["item/docs-fn","inline function docs","oklab(0.8888888888888888 0.03604964681556418 0.003943874564484689)","oklab(0.1111111111111111 0.03604964681556416 0.003943874564484687)"],["item/folder","folders","oklab(0.8888888888888888 0.022428291765317805 -0.028497419367323133)","oklab(0.1111111111111111 0.02242829176531779 -0.028497419367323116)"],["item/note","notes","oklab(0.8888888888888888 0.024728914883050554 -0.026525684737894076)","oklab(0.1111111111111111 0.02472891488305054 -0.026525684737894063)"],["iterate","iterate","oklab(0.8888888888888888 0.020205653310129787 0.03011416205738003)","oklab(0.1111111111111111 0.020205653310129773 0.030114162057380017)"],["ithkuil","ithkuil utilities","oklab(0.8888888888888888 -0.036068526411366354 -0.0037673046890149557)","oklab(0.1111111111111111 -0.03606852641136633 -0.0037673046890149536)"],["num/complex","complex numbers","oklab(0.8888888888888888 0.03618198188611823 0.0024485442409558746)","oklab(0.1111111111111111 0.03618198188611821 0.002448544240955873)"],["num/quaternion","quaternions","oklab(0.8888888888888888 0.006704141980008497 -0.03563966417377125)","oklab(0.1111111111111111 0.006704141980008494 -0.03563966417377123)"],["num/real","real numbers","oklab(0.8888888888888888 0.03290093315628716 0.015253189160068466)","oklab(0.1111111111111111 0.03290093315628714 0.015253189160068457)"],["number-theory","number theory","oklab(0.8888888888888888 0.0003014986216995622 -0.036263484122301584)","oklab(0.1111111111111111 0.00030149862169956204 -0.03626348412230156)"],["number-theory-complex","complex number theory","oklab(0.8888888888888888 0.02907232810419011 0.02167789013510365)","oklab(0.1111111111111111 0.029072328104190092 0.021677890135103635)"],["shader","shaders","oklab(0.8888888888888888 -0.020724055874378526 -0.02975978310107355)","oklab(0.1111111111111111 -0.020724055874378512 -0.029759783101073536)"],["slider","sliders","oklab(0.8888888888888888 0.033865493227995466 0.01297148991179885)","oklab(0.1111111111111111 0.033865493227995445 0.012971489911798842)"],["slope-field","slope fields","oklab(0.8888888888888888 -0.022470687111683173 -0.028464001876688766)","oklab(0.1111111111111111 -0.02247068711168316 -0.02846400187668875)"],["special","special functions","oklab(0.8888888888888888 0.015030980900427858 -0.03300304221247306)","oklab(0.1111111111111111 0.01503098090042785 -0.03300304221247304)"],["sym/core","symbolics core","oklab(0.8888888888888888 0.035578745248590844 0.007020261294508933)","oklab(0.1111111111111111 0.03557874524859082 0.007020261294508929)"],["sym/deriv","derivatives","oklab(0.8888888888888888 -0.030255982564408593 0.01999266618461653)","oklab(0.1111111111111111 -0.030255982564408576 0.01999266618461652)"],["sym/extras","extra symbolics","oklab(0.8888888888888888 0.008026758629754289 0.03536527008248305)","oklab(0.1111111111111111 0.008026758629754285 0.03536527008248304)"],["text","text","oklab(0.8888888888888888 -0.004343280343420245 -0.03600370950285214)","oklab(0.1111111111111111 -0.0043432803434202425 -0.036003709502852116)"],["trig/complex","complex trig","oklab(0.8888888888888888 -0.013244391016763052 -0.0337596991796786)","oklab(0.1111111111111111 -0.013244391016763045 -0.03375969917967858)"],["trig/hyperbolic/real","hyperbolic trigonometry","oklab(0.8888888888888888 -0.029584995824758882 0.02097282060563875)","oklab(0.1111111111111111 -0.029584995824758865 0.02097282060563874)"],["trig/hyperbolic/complex","hyperbolic trig (complexes)","oklab(0.8888888888888888 -0.03276211663597673 0.015549112374600759)","oklab(0.1111111111111111 -0.03276211663597672 0.01554911237460075)"],["trig/real","trigonometry","oklab(0.8888888888888888 0.021203385941673702 0.02942019046022204)","oklab(0.1111111111111111 0.021203385941673692 0.029420190460222023)"],["unit/pkg","units","oklab(0.8888888888888888 0.028687115491091174 -0.02218514338263566)","oklab(0.1111111111111111 0.028687115491091156 -0.022185143382635646)"],["with","with","oklab(0.8888888888888888 0.031021454930365597 0.01878298474978356)","oklab(0.1111111111111111 0.03102145493036558 0.01878298474978355)"],["withseq","with (sequential)","oklab(0.8888888888888888 -0.027779791060672045 0.02331125030393504)","oklab(0.1111111111111111 -0.027779791060672028 0.023311250303935025)"]],"fns":{".z":[[".z","gets the z-coordinate of a point",[0,1],0]],".w":[[".w","gets the w-coordinate of a point",[1],0]],"base":[["base","interprets numbers in <lhs> as if they were in base <rhs>",[2],4]],"valid":[["valid","returns true if a value is valid for the given type (whether a number is finite, whether a color is displayable, etc.)",[3,6,30],0]],"firstvalid":[["firstvalid","returns the first value which is valid for its type (the first finite number, the first color which is displayable, etc.)",[3],0]],"and":[["and","returns true if both inputs are true",[3,3],2]],"or":[["or","returns true if either of its inputs are true",[3,3],2]],"eldiscoveredby":[["eldiscoveredby","gets the discoverer of an element",[4],0]],"elname":[["elname","gets the name of an element",[4],0]],"elappearance":[["elappearance","gets the appearance of an element",[4],0]],"elcategory":[["elcategory","gets the category of an element",[4],0]],"elnamedby":[["elnamedby","gets who named an element",[4],0]],"elphase":[["elphase","gets the phase of an element at STP",[4],0]],"eldescription":[["eldescription","gets a description of an element",[4],0]],"elsymbol":[["elsymbol","gets the symbol of an element",[4],0]],"elconfig":[["elconfig","gets the electron configuration of an element",[4],0]],"elconfigshort":[["elconfigshort","gets the electron configuration of an element using the noble gas shorthand",[4],0]],"elblock":[["elblock","gets the block an element is in on the periodic table",[4],0]],"mass":[["mass","gets the mass of an element",[4],0]],"elboil":[["elboil","boiling point of an element",[4],0]],"eleaffinity":[["eleaffinity","amount of energy released when an electron attaches to a neutral atom of this element",[4],0]],"elenegativity":[["elenegativity","tendency for an atom of an element to attract shared electrons in a chemical bond",[4],0]],"elmelt":[["elmelt","melting point of an element",[4],0]],"elmolarheat":[["elmolarheat","amount of energy required to increase the temperature of one mole of an element by one degree kelvin",[4],0]],"elnumber":[["elnumber","atomic number of an element",[4],0]],"elperiod":[["elperiod","period of an element in the periodic table",[4],0]],"element":[["element","returns the element with a given symbol",[4],7]],"rgb":[["rgb","creates a color given its red, green, and blue components",[5],0]],"hsv":[["hsv","creates a color given its hue (0-360), saturation (0-1), and value (0-1)",[5],0]],"oklab":[["oklab","creates a color given its lightness, green-red, and blue-yellow components",[6],0]],"oklch":[["oklch","creates a color given its lightness, chromaticity, and hue components",[6],0]],"lightdark":[["lightdark","if a single color is passed, it will be inverted in dark mode; if two arguments are passed, the first is used for light mode and the second for dark mode",[6],0]],".r":[[".r","gets the red component of a color",[6],0]],".g":[[".g","gets the green component of a color",[6],0]],".b":[[".b","gets the blue component of a color",[6],0]],".a":[[".a","gets the alpha component of a color",[6],0]],"<":[["<","compares two values via the < operator",[7],2]],">":[[">","compares two values via the > operator",[7],2]],"≤":[["≤","compares two values via the ≤ operator",[7],2]],"≥":[["≥","compares two values via the ≥ operator",[7],2]],"≮":[["≮","compares two values via the ≮ operator",[7],2]],"≯":[["≯","compares two values via the ≯ operator",[7],2]],"≰":[["≰","compares two values via the ≰ operator",[7],2]],"≱":[["≱","compares two values via the ≱ operator",[7],2]],"=":[["=","compares two values via the = operator",[7],2]],"≠":[["≠","compares two values via the ≠ operator",[7],2]],".":[[".","dotted function calls",[8],4]],"-":[["-","negates its input",[9],1],["-","subtracts two values",[9],2],["-","subtracts one value from another",[9],4]],"+":[["+","unary plus; ensures a numeric value is passed",[9],1],["+","adds two values or points",[9],2],["+","adds two values",[9],4]],"·":[["·","multiplies two values",[9],2]],"÷":[["÷","divides two values",[9],2]],"⊙":[["⊙","multiplies multi-dimensional values component-by-component",[9],2]],"mod":[["mod","modulus operator (remainder-like)",[9],2]],"×":[["×","multiplies two real numbers",[9],2]],"↑":[["↑","raises a value to an exponent",[9],2]],"normaldist":[["normaldist","creates a normal distribution",[10],0]],"tdist":[["tdist","creates a t-distribution",[10],0]],"boltzmanndist":[["boltzmanndist","creates a Maxwell-Boltzmann distribution",[10],0]],"uniformdist":[["uniformdist","creates a uniform distribution",[10],0]],"poissondist":[["poissondist","creates a Poisson distribution",[10],0]],"binomialdist":[["binomialdist","creates a binomial distribution",[10],0]],"erf":[["erf","error function; related to area of a normal distribution",[10],0]],"erf^-1":[["erfinv","inverse error function",[10],0]],"faddeeva":[["faddeeva","scaled complex error function",[10],0]],"pdf":[["pdf","probability distribution function",[10],0]],"cdf":[["cdf","cumulative distribution function",[10],0]],"cdf^-1":[["inversecdf","computes a quantile of a data set or the inverse CDF of a distribution",[10],0]],"inversecdf":[["inversecdf","computes a quantile of a data set or the inverse CDF of a distribution",[10],0]],"join":[["join","joins multiple lists into a single one",[11],0]],"for":[["for","performs a list comprehension",[11],4]],"sort":[["sort","sorts the elements of a list",[12],0]],"unique":[["unique","removes any duplicate elements in a list",[12],0]],"min":[["min","returns the minimum of its inputs",[13],0]],"max":[["max","returns the maximum of its inputs",[13],0]],"total":[["total","returns the sum of its inputs",[13,14],0]],"mean":[["mean","takes the arithmetic mean of its inputs",[13],0]],"median":[["median","takes the median of its inputs",[13],0]],"quartile":[["quartile","computes a quartile of a data set",[13],0]],"quantile":[["quantile","computes a quantile of a data set or the inverse CDF of a distribution",[13],0]],"var":[["var","sample variance",[13],0]],"varp":[["varp","population variance",[13],0]],"stdev":[["stdev","sample standard deviation",[13],0]],"stdevp":[["stdevp","population standard deviation",[13],0]],"stddev":[["stdev","sample standard deviation",[13],0]],"stddevp":[["stdevp","population standard deviation",[13],0]],"mad":[["mad","mean absolute deviation",[13],0]],"cov":[["cov","sample covariance",[13],0]],"covp":[["covp","population covariance",[13],0]],"corr":[["corr","Pearson correlation coefficient",[13],0]],"stats":[["stats","computes a five-statistic summary",[13],0]],"ranks":[["ranks","computes the rank of each element of a list",[13],0]],"spearman":[["spearman","Spearman's rank correlation coefficient",[13],0]],"debugast":[["debugast","returns the AST of its input",[15],6]],"lngamma":[["lngamma","calculates the natural logarithm of the absolute value of the gamma function",[17],0]],"gamma":[["gamma","computes the gamma function",[17],0]],"center":[["center","gets the center of a circle",[18],0]],"circle":[["circle","constructs a circle from a center and radius",[18],0]],"distance":[["distance","calculates the distance between two objects",[18],0]],"end":[["end","gets the ending point of a vector",[18],0]],"glider":[["glider","constructs a point on an object",[18],0]],"intersection":[["intersection","constructs the point where two objects intersect",[18],0]],"line":[["line","constructs a line between two points",[18],0]],"midpoint":[["midpoint","constructs the midpoint of a line segment or between two points",[18],0]],"parallel":[["parallel","creates a line parallel to an existing line which passes through some point",[18],0]],"perpendicular":[["perpendicular","creates a line perpendicular to an existing line which passes through some point",[18],0]],"polygon":[["polygon","constructs a polygon from a set of points",[18],0]],"radius":[["radius","measures the radius of a circle",[18],0]],"ray":[["ray","constructs a ray (a line going in a particular direction)",[18],0]],"segment":[["segment","constructs a line segment",[18],0]],"segments":[["segments","gets the segments which make up a polygon",[18],0]],"start":[["start","gets the starting point of a vector",[18],0]],"vector":[["vector","constructs a vector between two points",[18],0]],"vertices":[["vertices","gets the vertices which make up a polygon",[18],0]],"angle":[["angle","constructs an angle from three vertices",[18],0]],"directed angle":[["directedangle","constructs an angle with a particular direction",[18],0]],"angles":[["angles","constructs an angle at every vertex of a polygon",[18],0]],"directed angles":[["directedangles","constructs a directed angle at every vertex of a polygon",[18],0]],"angle bisector":[["anglebisector","constucts the bisector of an angle",[18],0]],"perpendicular bisector":[["perpendicularbisector","constucts the perpendicular bisector of a line segment or between two points",[18],0]],"arc":[["arc","constructs an arc from three points",[18],0]],"length":[["length","calculates the length of an object",[18],0]],"translate":[["translate","translates an object by a vector",[18],0]],"rotate":[["rotate","rotates an object around a point by some angle",[18],0]],"dilate":[["dilate","scales an object from some point by some scaling factor",[18],0]],"reflect":[["reflect","reflects an object across a line",[18],0]],"perimeter":[["perimeter","measures the perimeter of a polygon",[18],0]],"image":[["image","draws an image on the graphpaper; pass a number to override the preferred aspect ratio",[19],0]],"point":[["point","constructs a point from multi-dimensional values",[20,28],0]],"screendistance":[["screendistance","calculates the distance between two points in terms of pixels on your screen, rather than graphpaper units",[20],0]],"debugpoint":[["debugpoint","given some point p, returns a color depending on which side of the currently active shader pixel that point p is on",[20],0]],".x":[[".x","gets the x-coordinate of a point",[20],0]],".y":[[".y","gets the y-coordinate of a point",[20],0]],"imgwidth":[["imgwidth","gets the natural width of an image",[22],0]],"imgheight":[["imgheight","gets the natural height of an image",[22],0]],"imgaspect":[["imgaspect","gets the preferred aspect ratio of an image",[22],0]],"iterate":[["iterate","iterates a variable substitution",[26],5]],"ithkuil gloss":[["ithkuilgloss","glosses an ithkuil word",[27],0]],"ithkuil ungloss":[["ithkuilungloss","unglosses an ithkuil word",[27],0]],"ithkuil script":[["ithkuilscript","converts an ithkuil word into script form",[27],0]],"ithkuil values":[["ithkuilvalues","given the name of a grammatical category of ithkuil, returns all values it can take",[27],0]],"ithkuil valid":[["ithkuilvalid","checks if a consonant form is valid according to ithkuil phonotactics",[27],0]],"ithkuil valid initial":[["ithkuilvalidinitial","checks if a consonant form is valid word-initially according to ithkuil phonotactics",[27],0]],"ithkuil valid final":[["ithkuilvalidfinal","checks if a consonant form is valid word-finally according to ithkuil phonotactics",[27],0]],"ithkuil ca":[["ithkuilca","generates an ithkuil CA form, optionally geminated",[27],0]],"arg":[["arg","returns the angle between a point and the x-axis",[28],0]],"conj":[["conj","takes the conjugate of a complex number or quaternion",[28,29],0]],"imag":[["imag","gets the imaginary part of a complex number",[28],0]],"real":[["real","gets the real part of a multi-dimensional number",[28,29],0]],"sign":[["sign","gets the sign of a number",[28,30],0]],"dot":[["dot","takes the dot product of two complex numbers",[28],0]],"complex":[["complex","converts a point into a complex number",[28],0]],".i":[[".i","gets the coefficient of 'i' in a multi-dimensional number",[28,29],0]],"cplot":[["cplot","gets the color a complex number would be represented by when performing domain coloring",[28],0]],"cplothue":[["cplothue","gets the hue a complex number would be represented by when performing domain coloring",[28],0]],"unsign":[["unsign","takes the absolute value of the components of a value",[29,30],0]],".j":[[".j","gets the coefficient of 'j' in a quaternion",[29],0]],".k":[[".k","gets the coefficient of 'k' in a quaternion",[29],0]],"sgn":[["sign","gets the sign of a number",[30],0]],"ln":[["ln","takes the natural logarithm of a value",[30],0]],"log":[["log","takes the base-10 logarithm of a value",[30],0]],"log_":[["log with subscript","takes the logarithm of a value in some base",[30],0]],"exp":[["exp","raises e to some value",[30],0]],"cmp":[["cmp","compares two numbers, returning -1, 0, or 1, depending on whether the first number is less than, equal to, or greater than the second number",[30],0]],"count":[["count","counts the size of a list",[30],0]],"floor":[["floor","rounds down to the nearest integer",[31,32],0]],"ceil":[["ceil","rounds up to the nearest integer",[31,32],0]],"round":[["round","rounds to the nearest integer; ties are rounded up",[31,32],0]],"fract":[["fract","calculate x-floor(x), or the fractional part of x",[31,32],0]],"forceshader":[["forceshader","forces the given expression to be executed in a shader",[33],0]],"forcejs":[["forcejs","evaluates an expression outside a shader, then passes the value to the shader",[33],6]],"slopefield":[["slopefield","generates a slope or vector field",[35],6]],"zeta":[["zeta","computes the Riemann zeta function",[36],0]],"sym":[["sym","creates a symbolic expression",[39],6]],"unsym":[["unsym","interpolates a value into a symbolic expression",[39],6]],"eval":[["eval","evaluates a symbolic expression in the current evaluation context",[39],6]],"concat":[["concat","concatenates one or more string-like values into a string",[40],0]],"sin":[["sin","takes the sine of an angle",[41,44],0]],"cos":[["cos","takes the cosine of an angle",[41,44],0]],"tan":[["tan","takes the tangent of an angle",[41,44],0]],"csc":[["csc","takes the cosecant of an angle",[41,44],0]],"sec":[["sec","takes the secant of an angle",[41,44],0]],"cot":[["cot","takes the cotangent of an angle",[41,44],0]],"sinh":[["sinh","takes the hyperbolic sinhe of an angle",[42],0]],"cosh":[["cosh","takes the hyperbolic coshine of an angle",[42],0]],"tanh":[["tanh","takes the hyperbolic tanhgent of an angle",[42],0]],"csch":[["csch","takes the hyperbolic cosecant of an angle",[42],0]],"sech":[["sech","takes the hyperbolic secant of an angle",[42],0]],"coth":[["coth","takes the hyperbolic cotangent of an angle",[42],0]],"arsinh":[["arsinh","takes the inverse hyperbolic sine of a value",[42],0]],"arcosh":[["arcosh","takes the inverse hyperbolic cosine of a value",[42],0]],"artanh":[["artanh","takes the inverse hyperbolic tangent of a value",[42],0]],"arcsch":[["arcsch","takes the inverse hyperbolic cosecant of a value",[42],0]],"arsech":[["arsech","takes the inverse hyperbolic secant of a value",[42],0]],"arcoth":[["arcoth","takes the inverse hyperbolic cotangent of a value",[42],0]],"arcsinh":[["arsinh","takes the inverse hyperbolic sine of a value",[42],0]],"arccosh":[["arcosh","takes the inverse hyperbolic cosine of a value",[42],0]],"arctanh":[["artanh","takes the inverse hyperbolic tangent of a value",[42],0]],"arccsch":[["arcsch","takes the inverse hyperbolic cosecant of a value",[42],0]],"arcsech":[["arsech","takes the inverse hyperbolic secant of a value",[42],0]],"arccoth":[["arcoth","takes the inverse hyperbolic cotangent of a value",[42],0]],"sinh^-1":[["arsinh","takes the inverse hyperbolic sine of a value",[42],0]],"cosh^-1":[["arcosh","takes the inverse hyperbolic cosine of a value",[42],0]],"tanh^-1":[["artanh","takes the inverse hyperbolic tangent of a value",[42],0]],"csch^-1":[["arcsch","takes the inverse hyperbolic cosecant of a value",[42],0]],"sech^-1":[["arsech","takes the inverse hyperbolic secant of a value",[42],0]],"coth^-1":[["arcoth","takes the inverse hyperbolic cotangent of a value",[42],0]],"arsinh^-1":[["sinh","takes the hyperbolic sinhe of an angle",[42],0]],"arcosh^-1":[["cosh","takes the hyperbolic coshine of an angle",[42],0]],"artanh^-1":[["tanh","takes the hyperbolic tanhgent of an angle",[42],0]],"arcsch^-1":[["csch","takes the hyperbolic cosecant of an angle",[42],0]],"arsech^-1":[["sech","takes the hyperbolic secant of an angle",[42],0]],"arcoth^-1":[["coth","takes the hyperbolic cotangent of an angle",[42],0]],"arcsinh^-1":[["sinh","takes the hyperbolic sinhe of an angle",[42],0]],"arccosh^-1":[["cosh","takes the hyperbolic coshine of an angle",[42],0]],"arctanh^-1":[["tanh","takes the hyperbolic tanhgent of an angle",[42],0]],"arccsch^-1":[["csch","takes the hyperbolic cosecant of an angle",[42],0]],"arcsech^-1":[["sech","takes the hyperbolic secant of an angle",[42],0]],"arccoth^-1":[["coth","takes the hyperbolic cotangent of an angle",[42],0]],"arcsin":[["arcsin","takes the inverse sine of a value",[44],0]],"arccos":[["arccos","takes the inverse cosine of a value",[44],0]],"arctan":[["arctan","takes the inverse tangent of a value",[44],0]],"arccsc":[["arccsc","takes the inverse cosecant of a value",[44],0]],"arcsec":[["arcsec","takes the inverse secant of a value",[44],0]],"arccot":[["arccot","takes the inverse cotangent of a value",[44],0]],"sin^-1":[["arcsin","takes the inverse sine of a value",[44],0]],"cos^-1":[["arccos","takes the inverse cosine of a value",[44],0]],"tan^-1":[["arctan","takes the inverse tangent of a value",[44],0]],"csc^-1":[["arccsc","takes the inverse cosecant of a value",[44],0]],"sec^-1":[["arcsec","takes the inverse secant of a value",[44],0]],"cot^-1":[["arccot","takes the inverse cotangent of a value",[44],0]],"arcsin^-1":[["sin","takes the sine of an angle",[44],0]],"arccos^-1":[["cos","takes the cosine of an angle",[44],0]],"arctan^-1":[["tan","takes the tangent of an angle",[44],0]],"arccsc^-1":[["csc","takes the cosecant of an angle",[44],0]],"arcsec^-1":[["sec","takes the secant of an angle",[44],0]],"arccot^-1":[["cot","takes the cotangent of an angle",[44],0]],"intosi":[["intosi","converts a value to its component SI units",[45],0]],"in":[["in","converts values between units",[45],2]],"unit":[["unit","returns the unit with a given symbol",[45],7]],"with":[["with","substitutes variables simultaneously",[46],4]],"withseq":[["withseq","substitutes variables in sequence",[47],4]]}}
